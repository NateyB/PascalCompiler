      1	program fib(input; output):
SYNERR: Found ';'; expected ')', ',' instead.
SYNERR: Found ':'; expected ';' instead.
      2	  var a: int; var p: integer;
SYNERR: Found 'ID'; expected 'array', 'real', 'integer' instead.
SYNERR: Found 'integer'; expected ';' instead.
SYNERR: Found ';'; expected 'begin', 'procedure', 'var' instead.
      3	  var numsArray : array [6..12] on integer;
      4	  var q: real;
      5
      6	  procedure fib1(anInt : integer; b : real, c : real);
SYNERR: Found ','; expected ')', ';' instead.
      7	    begin
      8	        if a <= 1 then fib := c
      9	        else call fib (a - 1, c, b + c)
     10	    end;
     11
     12	  procedure fib2(a : integer);
     13	    var b : real; var c : real; var sum : ;
SYNERR: Found ';'; expected 'array', 'real', 'integer' instead.
     14	    var b : real;
SYNERR: Found 'real'; expected ';' instead.
SYNERR: Found ';'; expected 'begin', 'procedure', 'var' instead.
     15	    procedure rawr3(b : real);
     16	      var q : real;
     17	      begin
     18	        q := b + 2.0;
     19	        call fib2(q).
SYNERR: Found '.'; expected 'end', ';' instead.
     20	      end;
     21
     22	    begin
     23	      a := a - 1;
     24	      fib1(3);
SYNERR: Found '('; expected '[', ':=' instead.
     25	      sum := 1;
     26	      c := b;
     27	      while a > 0) do
SYNERR: Found ')'; expected 'do' instead.
SYNERR: Found 'do'; expected 'if', 'while', 'begin', 'call', 'ID' instead.
     28	        call 3;
     29	        begin
     30	          a := a - 1;
     31	          b := sum;
     32	          sum := c + sum;
     33	          c := b
     34	        end
     35	      fib2 := sum
SYNERR: Found 'ID'; expected 'end', ';' instead.
     36	    end;
     37
     38	  procedure init;
     39	    begin
     40	      n := 12;
     41	      if (1 and 2) or 3 then p := 12
     42	      else p := 14;
     43	      numsArray[3] := 15.56;
     44	      q := q[4];
     45	      q[4] := 12;
     46	    end;
SYNERR: Found 'end'; expected 'if', 'while', 'begin', 'call', 'ID' instead.
     47
     48	    begin
     49	      call init;
     50	      call fib2;
     51	      call rawr3(34, 56)
     52	    end.
